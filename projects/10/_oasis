Name: JackCompiler
Version: 0.1
Synopsis: Compiler for Jack language
Authors: Ilya Chukhman <ilya.chukhman@gmail.com> and Dan Genin <dan.genin@gmail.com>
License: LGPL with OCaml linking exception

Description: Allows parsing and executing Jack programs

OASISFormat: 0.4
BuildTools: ocamlbuild
Plugins: META (0.4), DevFiles (0.4)

PreBuildCommand: atdgen -j ./src/parser/grammar.atd; atdgen -t ./src/parser/grammar.atd

# Clean atdgen files
PostCleanCommand: rm -f src/parser/grammar_*

# Enable testing
PostConfCommand: sed -i.bak 's/tests=\"false\"/tests=\"true\"/' setup.data

Library "lexer"
  Path: src/lexer
  Modules: Lexer
  Install: false

Library "parser"
  Path: src/parser
  Modules: Parser
  BuildDepends: lexer, yojson, atdgen
  Install: false

Library "codegen"
  Path: src/codegen
  Modules: Codegen
  BuildDepends: lexer, yojson, atdgen, batteries
  Install: false

Executable jc
  Path: src/jc
  MainIs: jc.ml
  Build$: flag(tests)
  CompiledObject: best
  BuildDepends: codegen, parser, lexer, atdgen
  Install: false

Test class
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc class.jack

Test constructor
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc constructor.jack

Test statement
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc statement.jack

Test parenthesis
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc parenthesis.jack

Test array
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc array.jack

Test array_assignment
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc array_assignment.jack

Test subcall
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc subcall.jack

Test methcall
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc methcall.jack

Test ifelse
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc ifelse.jack

Test while
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc while.jack

Test return
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc return.jack

Test comment
  Run: true
  Type: Custom (0.4)
  TestTools: jc
  Command: $jc comment.jack
